#!/bin/sh
### BEGIN INIT INFO
# Provides:          unidisk-service
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       unidisk service
### END INIT INFO

SCRIPT="PATH=$PATH:/opt/node/bin node /home/user/Projects/unidisk/udFuse.js -p ud_service /home/user/ud"
RUNAS="user"

# for nodejs
if [ -d /opt/node/bin ]; then
  export NODEROOT=/opt/node
  export PATH=$PATH:$NODEROOT/bin
fi

PIDFILE=/var/run/unidisk-service.pid
LOGFILE=/var/log/unidisk-service.log

start() {
  if [ -f /var/run/$PIDNAME ] && kill -0 $(cat /var/run/$PIDNAME); then
    echo 'Service already running' >&2
    return 1
  fi
  echo 'Starting service...' >&2
  # CACHE_PATH=`grep cache_path /home/user/.unidisk/settings.json | awk -F  ":" '{print $2}' | sed -r 's/[", ]//g'`
  # mkdir -p $CACHE_PATH
  # chown -R $RUNAS:$RUNAS $CACHE_PATH/..
  local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service...' >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}

uninstall() {
  echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
  local SURE
  read SURE
  if [ "$SURE" = "yes" ]; then
    stop
    rm -f "$PIDFILE"
    echo "Notice: log file is not be removed: '$LOGFILE'" >&2
    update-rc.d -f unidisk-service remove
    rm -fv "$0"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  uninstall)
    uninstall
    ;;
  retart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|uninstall}"
esac
